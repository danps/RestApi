// <auto-generated />
using System;
using Danps.Catalogo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Danps.Catalogo.Data.Migrations
{
    [DbContext(typeof(CatalogoDbContext))]
    partial class CatalogoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Danps.Catalogo.Domain.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("seq_my_endereco");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(127)")
                        .HasColumnName("bairro");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("varchar(8)")
                        .HasColumnName("cep");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(127)")
                        .HasColumnName("cidade");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("complemento");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("uf");

                    b.Property<Guid>("FornecedorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("seq_my_fornecedor");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("logradouro");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("numero");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId")
                        .IsUnique();

                    b.ToTable("my_endereco", (string)null);
                });

            modelBuilder.Entity("Danps.Catalogo.Domain.Fornecedor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("seq_my_fornecedor");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ind_ativo");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("num_documento");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nom_fornecedor");

                    b.Property<int>("TipoFornecedor")
                        .HasColumnType("int")
                        .HasColumnName("idt_tipo_fornecedor");

                    b.HasKey("Id");

                    b.ToTable("my_fornecedor", (string)null);
                });

            modelBuilder.Entity("Danps.Catalogo.Domain.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("seq_my_produto");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ind_ativo");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime")
                        .HasColumnName("dat_inclusao");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("dsc_produto");

                    b.Property<Guid>("FornecedorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("seq_my_fornecedor");

                    b.Property<string>("Imagem")
                        .IsRequired()
                        .HasColumnType("varchar(127)")
                        .HasColumnName("dsc_imagem");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nom_produto");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("val_produto");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.ToTable("my_produto", (string)null);
                });

            modelBuilder.Entity("Danps.Catalogo.Domain.Endereco", b =>
                {
                    b.HasOne("Danps.Catalogo.Domain.Fornecedor", "Fornecedor")
                        .WithOne("Endereco")
                        .HasForeignKey("Danps.Catalogo.Domain.Endereco", "FornecedorId")
                        .IsRequired();

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("Danps.Catalogo.Domain.Produto", b =>
                {
                    b.HasOne("Danps.Catalogo.Domain.Fornecedor", "Fornecedor")
                        .WithMany("Produtos")
                        .HasForeignKey("FornecedorId")
                        .IsRequired();

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("Danps.Catalogo.Domain.Fornecedor", b =>
                {
                    b.Navigation("Endereco")
                        .IsRequired();

                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
